services:
  frontend: 
    build: 
      context: .
    ports:
      - 5173:5173
    container_name: frontend
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /frontend
          ignore:
            - node_modules
  postgres:
    image: postgres:17
    build:
      context: ./postgres
    volumes:
      - postgres-data:/var/lib/postgresql
    restart: always
    container_name: postgres
    ports:
      - "5432:5432"
    shm_size: 2g
    environment:
      POSTGRES_DB: gisdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "psql -U postgres -d gisdb -c 'SELECT * FROM gisdb_is_populated()' | grep is_complete ||  exit 1"]
      interval: 5s
      timeout: 5s
      retries: 50
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 4G
  geoserver:
    image: geosolutionsit/geoserver
    build: 
      context: ./geoserver
    volumes:
      - geoserver-data:/geoserver
    container_name: geoserver
    ports:
      - "8080:8080"
    environment:
      - ADMIN_PASSWORD=geoserver
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'curl -f -X GET http://localhost:8080/geoserver/gwc/rest/layers/qmaps:aus_roads_with_vertices -H  "accept: application/xml" -H  "content-type: application/json" || exit 1']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  api:
    build: 
      context: ./api
    depends_on:
      postgres:
        condition: service_healthy #Don't start this container until postgres is booted
    ports:
      - 3002:3002
    container_name: api

  geoserver_seeder:
    image:  bitnami/os-shell:latest 
    container_name: geoserver-seeder
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./geoserver_seeder/scripts:/scripts  # Mount the script directory into the container
    environment:
      x1: 138.222
      y1: -34.8
      x2: 138.8050
      y2: -35
    command: ["/bin/sh", "-c", "/scripts/seed_geoserver.sh"]
volumes:
  postgres-data:
  geoserver-data: